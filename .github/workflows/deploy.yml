name: Deploy to Digital Ocean
on:
  push:
    branches: [main]
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DOCKER_API_KEY }}
          password: ${{ secrets.DOCKER_API_KEY }}

      - name: Build, tag, and push image to Digital Ocean Docker Registry
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build  --build-arg REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }} -t registry.digitalocean.com/loyalityapp/loyalitywebapp:$IMAGE_TAG .
          docker tag registry.digitalocean.com/loyalityapp/loyalitywebapp:${{ github.sha }} registry.digitalocean.com/loyalityapp/loyalitywebapp:latest
          docker push registry.digitalocean.com/loyalityapp/loyalitywebapp:latest

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DOCKER_API_KEY }}
          password: ${{ secrets.DOCKER_API_KEY }}
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd  /home/pipeline-user/loyality-app;
            echo "===================Pull Image========================="
            docker pull registry.digitalocean.com/loyalityapp/loyalitywebapp:latest

            echo "=================Updating Container ==================="
            echo "REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}"  > env
            echo "PORT=${{ secrets.PORT }}"  >> env
            echo "DB_HOST=${{ secrets.DB_HOST }}"  >> env
            echo "DB_PORT=${{ secrets.DB_PORT }}"  >> env
            echo "DB_USER=${{ secrets.DB_USER }}"  >> env
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}"  >> env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"  >> env
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}"  >> env
            docker-compose config
            docker-compose -p loyality-app  down  > /dev/null 2>&1
            docker-compose -p loyality-app up -d  > /dev/null 2>&1
