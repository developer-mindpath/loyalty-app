name: Deploy to Digital Ocean
on:
  push:
    branches: [main]
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build, tag, and push image to Digital Ocean Docker Registry
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker login registry.digitalocean.com --username {{secrets.API_KEY}} --password {{secrets.API_KEY}}
          docker build -t registry.digitalocean.com/loyalityapp:$IMAGE_TAG .
          docker push registry.digitalocean.com/loyalityapp:$IMAGE_TAG

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd  /home/pipeline-user/loyality-app;
            echo "===================Pull Image========================="
            docker login registry.digitalocean.com --username {{secrets.API_KEY}} --password-stdin {{secrets.API_KEY}}
            docker pull registry.digitalocean.com/loyalityapp:${{ github.sha }}
            docker tag registry.digitalocean.com/loyalityapp:${{ github.sha }} registry.digitalocean.com/loyalityapp:latest

            echo "=================Updating Container ==================="
            echo "NEXT_PUBLIC_DB_URL=${{ secrets.NEXT_PUBLIC_DB_URL }}"  > env
            docker-compose config
            docker-compose -p loyality-app  down  > /dev/null 2>&1
            docker-compose -p loyality-app up -d  > /dev/null 2>&1
